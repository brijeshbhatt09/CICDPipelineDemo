name: Android build

on: push
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Clean
        run: ./gradlew clean

      - name: Compile
        run: ./gradlew compileDebugSources

      - name: Unit Tests
        run: ./gradlew test

      - name: Build Project
        run: ./gradlew assembleRelease

      - name: Sign Apk
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Build Analysis
        run: ./gradlew lint

      - name: Artifact Build report
        if: ${{ always() }}
        uses: actions/upload-artifact@v1
        with:
          name: CICDArtifacts
          path: app/build/reports

      - name: Artifacts APK
        uses: actions/upload-artifact@v1
        with:
          name: CICDArtifacts
          path: app/build/outputs/apk/release/app-release-unsigned-signed.apk

      - name: upload app to pCloudy
        env:
          PCLOUDY_USERNAME: ${{ secrets.PCLOUDY_USERNAME }}
          PCLOUDY_ACCESS_KEY: ${{ secrets.PCLOUDY_ACCESS_KEY }}
        run: |
            echo "install cURL"
            sudo apt install curl
            echo "Verify install of curl on Ubuntu"
            curl --version
            echo "upload apk"
            curl -X POST -F "file=@/home/runner/work/CICDPipelineDemo/CICDPipelineDemo/app/build/outputs/apk/release/app-release-unsigned-signed.apk" -F "source_type=raw" -F "token=49gvbyp9zkqwtgn26g4yhncs" -F "filter=all" https://device.pcloudy.com/api/upload_file

  test:
    needs: build
    runs-on: ubuntu-latest # the machine type
    steps:
      - uses: actions/checkout@v2 #checkout the code
        with:
          repository: abhi8130/YovoAndroidAutomation     
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run tests on pCloudy  
        id: pCloudy
        run: mvn clean test
        continue-on-error: false
      - name: Check on failures
        if: steps.pCloudy.outputs.status == 'failures'
        run: exit 1
        
  Distribution:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: CICDArtifacts
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: yovo
          file: CICDArtifacts/app-release-unsigned-signed.apk

  Deploy:
    needs: Distribution

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v1

      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build Project
        run: ./gradlew bundleRelease

      - name: Sign Bundle
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.cicdpipeline
          releaseFile: app/build/outputs/bundle/release/app-release.aab
          track: production
          whatsNewDirectory: distribution/whatsnew


