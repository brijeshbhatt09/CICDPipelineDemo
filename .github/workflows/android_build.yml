name: Android build

on: push

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v1


      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Clean
        run: ./gradlew clean

      - name: Compile
        run: ./gradlew compileDebugSources

      - name: Unit Tests
        run: ./gradlew test

      - name: Build Project
        run: ./gradlew assemble

      - name: Analysis
        run: ./gradlew lint

  test:
    needs: build

    runs-on: macos-latest # the machine type

    strategy: # we are using strategy if we need to run on parallel with different devices and version
      matrix:
        api-level: [29] #Google api level for example [25,23,28]
        target: [default]
    steps:
      - uses: actions/checkout@v2 #checkout the code
        with:
         repository: abhi8130/YovoAndroidAutomation
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install and Run Appium Server
        run: |
          chmod +x ./scripts/RunAppiumServer.sh # install and run appium server in the background
          ./scripts/RunAppiumServer.sh
      - name: Run Appium Tests
        uses: reactivecircus/android-emulator-runner@v1 # install and create the Emulator
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: mvn test # running our test with info to check the results

  Deliver:
    needs: test

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v1


      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Deliver Project
        run: ./gradlew appDistributionUploadRelease

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
         name: app
         path: app/build/outputs/apk/release/app-release.apk



